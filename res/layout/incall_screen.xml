<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (C) 2007 The Android Open Source Project
     Copyright (C) 2016 The Altair ROM Project

     Licensed under the Apache License, Version 2.0 (the "License");
     you may not use this file except in compliance with the License.
     You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License.
-->

<!-- In-call state of the Phone UI. -->
<FrameLayout android:layout_width="fill_parent"
             android:layout_height="fill_parent"
             xmlns:android="http://schemas.android.com/apk/res/android">

    <!-- Main frame containing the main set of in-call UI elements. -->
    <FrameLayout android:id="@+id/mainFrame"
                 android:paddingLeft="6.0dip"
                 android:paddingTop="10.0dip"
                 android:paddingRight="6.0dip"
                 android:layout_width="fill_parent"
                 android:layout_height="fill_parent">

        <!-- (1) inCallPanel: the main set of in-call UI elements.
             We update this view's background to indicate the state of the
             current call; see updateInCallPanelBackground(). -->
        <RelativeLayout android:id="@+id/inCallPanel"
                        android:layout_width="fill_parent"
                        android:layout_height="fill_parent">

            <!-- The "Call Card", which displays info about the currently
                 active phone call(s) on the device.  See call_card.xml. -->
            <com.android.phone.CallCard android:id="@+id/callCard"
                                        android:layout_width="fill_parent"
                                        android:layout_height="fill_parent" />

        </RelativeLayout>  <!-- End of inCallPanel -->

         <!-- Contains all OTA-related UI elements for CDMA -->
        <ViewStub android:id="@+id/otaCallCardStub"
                  android:layout="@layout/otacall_card"
                  android:layout_width="fill_parent"
                  android:layout_height="fill_parent" />

    </FrameLayout>  <!-- End of mainFrame -->

    <!-- The "Manage conference" UI.  This panel is displayed (instead of
         the inCallPanel) when the user clicks the "Manage conference"
         button while on a conference call. -->
    <ViewStub android:id="@+id/manageConferencePanelStub"
              android:layout="@layout/manage_conference_panel"
              android:layout_width="fill_parent"
              android:layout_height="fill_parent" />

    <!-- The sliding drawer control containing the DTMF dialpad.
         Note this isn't a child of mainFrame, which ensures that it'll be
         able to use the full width of the screen.  (And a SlidingDrawer
         widget needs to be be a direct child of a FrameLayout anyway.)
         This is used only on devices that do *not* have an onscreen
         InCallTouchUi widget.-->
    <!-- TODO: this should be a ViewStub, and should only get inflated
         on platforms that need it. -->
    <include layout="@layout/dtmf_twelve_key_dialer" />

    <!-- Finally, the "touch lock" overlay, drawn on top of the DTMF
         dialpad (after some delay) to prevent false touches from
         triggering DTMF tones.  (When the overlay is up, you need to
         double-tap the "lock" icon to unlock the dialpad.) -->
    <RelativeLayout android:id="@+id/touchLockOverlay"
                    android:background="#88000000"
                    android:visibility="gone"
                    android:layout_width="fill_parent"
                    android:layout_height="fill_parent">

        <!-- Layout note: we could use android:layout_centerInParent="true"
             here to center the lock icon exactly in the middle of the screen.
             But it actually looks better to have the lock roughly in the
             middle of the dialpad key area, so instead we position it a
             fixed distance from the bottom of the screen. -->
        <TextView android:textAppearance="?android:textAppearanceLarge"
                  android:gravity="center"
                  android:id="@+id/touchLockIcon"
                  android:background="@drawable/dialpad_lock"
                  android:layout_width="wrap_content"
                  android:layout_height="wrap_content"
                  android:layout_marginBottom="70.0dip"
                  android:text="@string/touchLockText"
                  android:layout_alignParentBottom="true"
                  android:layout_centerHorizontal="true" />

    </RelativeLayout>

    <!-- In-call onscreen touch controls, used on some platforms. -->
    <!-- TODO: if this widget ends up being totally unused on some platforms,
         then this should probably be a ViewStub. -->
    <com.android.phone.InCallTouchUi android:id="@+id/inCallTouchUi"
                                     android:layout_width="fill_parent"
                                     android:layout_height="fill_parent" />

    <!-- Frame where the provider's badge will be
         inflated. The badge must fit in the available height.
         The badge is displayed for 5s on top of the contact's
         picture.
      -->
    <FrameLayout android:layout_gravity="top"
                 android:id="@+id/inCallProviderOverlay"
                 android:background="@drawable/dialog_bg_calling_via"
                 android:visibility="gone"
                 android:layout_width="fill_parent"
                 android:layout_height="wrap_content"
                 android:layout_marginTop="8.0dip"
                 android:minHeight="88.0dip">

        <TextView android:textAppearance="?android:textAppearanceMediumInverse"
                  android:textSize="16.0sp"
                  android:gravity="center"
                  android:layout_gravity="center"
                  android:id="@+id/callingVia"
                  android:layout_width="wrap_content"
                  android:layout_height="wrap_content"
                  android:text="@string/calling_via_template" />

    </FrameLayout>

</FrameLayout>
